@model Assessments.ViewModels.SetupViewModels.SetupCreateCategoriesViewModel

@{
    ViewBag.Title = "EditAssessment";
}

<h2>
    <a href="@Url.Action("Index")" type="button" class="btn btn-default">
        <span class="glyphicon glyphicon-circle-arrow-left"></span>
    </a>
    <span id="AssessmentNameHeader">@Model.AssessmentName</span> 
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#editModal">
        <span class="glyphicon glyphicon-edit"></span>
    </button>
    <button type="button" class="btn btn-danger"  data-toggle="modal" data-target="#deleteModal">
        <span class="glyphicon glyphicon-trash"></span>
    </button>

    @if (Model.Live)
    {
        <span class="label label-primary">Live</span>
    }
    else
    {
        <span class="label label-warning">Locked</span>
    }
</h2>

@if(!Model.CanUnlock)
{
    <div class="alert alert-warning">
        <h3>The Assessment cannot be made live for the following reasons:</h3>
        <ul>
        @foreach(var item in Model.LockedReasons)
        {
            <li>
                @item
            </li>
        }
        </ul>
    </div>
}

<div class="row">
    <div class="col-xs-12">
        <div class="btn-group btn-group-justified" role="group">
            @foreach (var item in Model.Categories)
            {
                <a href="@Url.Action("EditCategory", new { id = item.ID })" class="btn btn-primary">@item.Name</a>
            }
        </div>
    </div>
</div>

<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Edit Assessment</h4>
            </div>
            @using (Ajax.BeginForm(
                "UpdateAssessment",
                new { id = ViewContext.RouteData.Values["id"] },
                new AjaxOptions { OnSuccess = "AfterUpdateAssessment" },
                new { id = "UpdateAssessmentForm" })
                )
            {
            <div class="modal-body">
                <div class="row">
                    <div class="col-xs-12">
                        @Html.Partial("_ValidationErrors", ViewData.ModelState)
                        @Html.TextBoxFor(o => o.AssessmentName, new { @class="form-control" })
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-primary">Save</button>
            </div>
            }
        </div>
    </div>
</div>

<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Delete Assessment</h4>
            </div>
            @using (Html.BeginForm("DeleteAssessment", "Setup", new { id = ViewContext.RouteData.Values["id"] }))
            {
                <div class="modal-body">
                    <div class="row">
                        <div class="col-xs-12">
                            This feature is in development.
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {

        });

        function AfterUpdateAssessment()
        {
            $("#AssessmentNameHeader").text($("#@Html.IdFor(o => o.AssessmentName)").val());
            $("#editModal").modal("hide");
            $(".validation-summary-errors").addClass("validation-summary-valid");
            $(".validation-summary-errors").removeClass("validation-summary-errors");
        }
    </script>
}